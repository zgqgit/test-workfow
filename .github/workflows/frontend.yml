name: FrontendCI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "r*"

env:
  DOCKERHUB_REPO: test/frontend/
  DOCKER_NEXUS: 110.16.193.170:50080
  DOCKER_CR: cr.dataelem.com
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
    
  build_bisheng:
    runs-on: ubuntu-latest
    # if: startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      
      - name: Set Environment Variable
        run: echo "RELEASE_VERSION=${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV

      # 私有docker 镜像仓库
      - name: set insecure registry
        run: |
          echo "{ \"insecure-registries\": [\"http://${{ env.DOCKER_NEXUS }}\"] }" | sudo tee /etc/docker/daemon.json
          sudo service docker restart
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login Nexus Container Registry
        uses: docker/login-action@v2
        with:
          registry: http://${{ env.DOCKER_NEXUS }}/
          username: ${{ secrets.NEXUS_USER }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      # 登录 docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: https://${{ env.DOCKER_CR }}/
          username: ${{ secrets.CR_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CR_DOCKERHUB_TOKEN }}
      # - name: Build frontend images
      #   id: docker_build_frontend
      #   run: |
      #     docker buildx build --platform linux/amd64,linux/arm64 --tag ${{ env.DOCKER_CR }}/${{ env.DOCKERHUB_REPO }}bisheng-frontend:latest --output type=docker ./src/frontend/
      # - name: Push frontend images
      #   id: push_frontend_images
      #   run: |
      #     docker push ${{ env.DOCKER_CR }}/${{ env.DOCKERHUB_REPO }}bisheng-frontend:latest
      - name: Build frontend and push
        id: docker_build_frontend
        uses: docker/build-push-action@v2
        with:
          # backend 的context目录
          context: "./src/frontend/"
          file: "./base_Dockerfile"
          # 是否 docker push
          push: true
          # docker build arg, 注入 APP_NAME/APP_VERSION
          platforms: linux/amd64,linux/arm64
          build-args: |
            APP_NAME="bisheng-backend"
            APP_VERSION=${{ steps.get_version.outputs.VERSION }}
          # 生成两个 docker tag: ${APP_VERSION} 和 latest
          tags: |
            ${{ env.DOCKER_CR }}/${{ env.DOCKERHUB_REPO }}bisheng-frontend:latest
